/*
Navicat Oracle Data Transfer
Oracle Client Version : 11.2.0.2.0

Source Server         : aitest
Source Server Version : 110200
Source Host           : 10.13.131.63:1521
Source Schema         : AITEST

Target Server Type    : ORACLE
Target Server Version : 110200
File Encoding         : 65001

Date: 2018-11-06 20:16:31
*/


-- ----------------------------
-- Table structure for COMP
-- ----------------------------
DROP TABLE "AITEST"."COMP";
CREATE TABLE "AITEST"."COMP" (
"COMP_ID" VARCHAR2(100 BYTE) NOT NULL ,
"COMP_NAME" VARCHAR2(60 CHAR) DEFAULT ''  NULL ,
"COMP_CITY" VARCHAR2(10 CHAR) DEFAULT ''  NULL ,
"CREATE_BY" VARCHAR2(80 CHAR) DEFAULT ''  NULL ,
"CREATE_AT" DATE DEFAULT NULL  NULL ,
"UPDATE_BY" VARCHAR2(80 CHAR) DEFAULT ''  NULL ,
"UPDATE_AT" DATE DEFAULT ''  NULL ,
"DEL_FLAG" NUMBER(9) DEFAULT 0  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "AITEST"."COMP" IS '公司表';
COMMENT ON COLUMN "AITEST"."COMP"."COMP_ID" IS '公司ID';
COMMENT ON COLUMN "AITEST"."COMP"."COMP_NAME" IS '公司名称';
COMMENT ON COLUMN "AITEST"."COMP"."COMP_CITY" IS '公司所在城市';
COMMENT ON COLUMN "AITEST"."COMP"."CREATE_BY" IS '创建人';
COMMENT ON COLUMN "AITEST"."COMP"."CREATE_AT" IS '创建时间';
COMMENT ON COLUMN "AITEST"."COMP"."UPDATE_BY" IS '修改者';
COMMENT ON COLUMN "AITEST"."COMP"."UPDATE_AT" IS '修改时间';
COMMENT ON COLUMN "AITEST"."COMP"."DEL_FLAG" IS '删除标识';

-- ----------------------------
-- Table structure for DEPT
-- ----------------------------
DROP TABLE "AITEST"."DEPT";
CREATE TABLE "AITEST"."DEPT" (
"DEPT_ID" VARCHAR2(100 BYTE) DEFAULT 0  NOT NULL ,
"COMP_ID" VARCHAR2(100 BYTE) DEFAULT 0  NULL ,
"DEPT_NUM" VARCHAR2(20 BYTE) DEFAULT ''  NULL ,
"DEPT_NAME" VARCHAR2(80 BYTE) DEFAULT ''  NULL ,
"CREATE_BY" VARCHAR2(80 BYTE) NULL ,
"CREATE_AT" DATE NULL ,
"UPDATE_BY" VARCHAR2(80 BYTE) NULL ,
"UPDATE_AT" DATE NULL ,
"DEL_FLAG" NUMBER(8) DEFAULT 0  NULL ,
"DEPT_CITY" VARCHAR2(80 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "AITEST"."DEPT"."DEPT_ID" IS '部门ID';
COMMENT ON COLUMN "AITEST"."DEPT"."COMP_ID" IS '公司ID';
COMMENT ON COLUMN "AITEST"."DEPT"."DEPT_NUM" IS '部门编号';
COMMENT ON COLUMN "AITEST"."DEPT"."DEPT_NAME" IS '部门名称';
COMMENT ON COLUMN "AITEST"."DEPT"."CREATE_BY" IS '创建人';
COMMENT ON COLUMN "AITEST"."DEPT"."CREATE_AT" IS '创建时间';
COMMENT ON COLUMN "AITEST"."DEPT"."UPDATE_BY" IS '修改人';
COMMENT ON COLUMN "AITEST"."DEPT"."UPDATE_AT" IS '修改时间';
COMMENT ON COLUMN "AITEST"."DEPT"."DEL_FLAG" IS '删除标识';
COMMENT ON COLUMN "AITEST"."DEPT"."DEPT_CITY" IS '部门所在城市';

-- ----------------------------
-- Table structure for MESSAGE
-- ----------------------------
DROP TABLE "AITEST"."MESSAGE";
CREATE TABLE "AITEST"."MESSAGE" (
"ID" NUMBER(9) NOT NULL ,
"TITLE" VARCHAR2(40 CHAR) DEFAULT ''  NULL ,
"USER_ID" NUMBER(9) DEFAULT 0  NULL ,
"IS_READ" NUMBER(9) DEFAULT 0  NULL ,
"CONTENT" VARCHAR2(255 CHAR) DEFAULT ''  NULL ,
"CREATE_BY" VARCHAR2(80 CHAR) DEFAULT ''  NULL ,
"CREATE_AT" DATE DEFAULT NULL  NULL ,
"UPDATE_BY" VARCHAR2(80 CHAR) DEFAULT ''  NULL ,
"UPDATE_AT" DATE DEFAULT ''  NULL ,
"EXTRA" VARCHAR2(255 BYTE) NULL ,
"DEL_FLAG" NUMBER(9) DEFAULT 0  NULL ,
"ABLE_TYPE" VARCHAR2(80 CHAR) DEFAULT NULL  NULL ,
"ABLE_ID" VARCHAR2(80 CHAR) DEFAULT NULL  NULL ,
"TYPE" NUMBER(5) DEFAULT NULL  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "AITEST"."MESSAGE" IS '消息表';
COMMENT ON COLUMN "AITEST"."MESSAGE"."ID" IS '消息id';
COMMENT ON COLUMN "AITEST"."MESSAGE"."TITLE" IS '标题';
COMMENT ON COLUMN "AITEST"."MESSAGE"."USER_ID" IS '用户id';
COMMENT ON COLUMN "AITEST"."MESSAGE"."IS_READ" IS '消息是否已读(0:未读, 1:已读)';
COMMENT ON COLUMN "AITEST"."MESSAGE"."CONTENT" IS '消息内容';
COMMENT ON COLUMN "AITEST"."MESSAGE"."CREATE_BY" IS '创建人';
COMMENT ON COLUMN "AITEST"."MESSAGE"."CREATE_AT" IS '创建时间';
COMMENT ON COLUMN "AITEST"."MESSAGE"."UPDATE_BY" IS '修改者';
COMMENT ON COLUMN "AITEST"."MESSAGE"."UPDATE_AT" IS '修改时间';
COMMENT ON COLUMN "AITEST"."MESSAGE"."EXTRA" IS '额外信息';
COMMENT ON COLUMN "AITEST"."MESSAGE"."DEL_FLAG" IS '删除标识(0:正常; 1:已作废)';
COMMENT ON COLUMN "AITEST"."MESSAGE"."ABLE_TYPE" IS '消息类别名称';
COMMENT ON COLUMN "AITEST"."MESSAGE"."ABLE_ID" IS '消息类别id';
COMMENT ON COLUMN "AITEST"."MESSAGE"."TYPE" IS '消息类型; 1:抢单成功消息; 2:抢单失败消息';

-- ----------------------------
-- Table structure for OPERATE_LOG
-- ----------------------------
DROP TABLE "AITEST"."OPERATE_LOG";
CREATE TABLE "AITEST"."OPERATE_LOG" (
"ID" NUMBER NOT NULL ,
"OPERATE_TYPE" NUMBER(5) NOT NULL ,
"USER_ID" NUMBER NOT NULL ,
"USER_NAME" VARCHAR2(50 BYTE) NOT NULL ,
"COMP_ID" VARCHAR2(40 BYTE) DEFAULT NULL  NULL ,
"COMP_NAME" VARCHAR2(80 BYTE) NULL ,
"DEPT_ID" VARCHAR2(40 BYTE) DEFAULT NULL  NULL ,
"DEPT_NAME" VARCHAR2(80 BYTE) NULL ,
"OPERATE_TIME" DATE NULL ,
"REMARK" VARCHAR2(100 BYTE) NULL ,
"ABLE_ID" VARCHAR2(80 BYTE) NOT NULL ,
"ABLE_TYPE" VARCHAR2(80 BYTE) NOT NULL ,
"CREATED_AT" DATE NULL ,
"CREATED_BY" VARCHAR2(80 BYTE) NULL ,
"UPDATED_AT" DATE NULL ,
"UPDATED_BY" VARCHAR2(80 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "AITEST"."OPERATE_LOG"."OPERATE_TYPE" IS '操作类型';
COMMENT ON COLUMN "AITEST"."OPERATE_LOG"."USER_ID" IS '操作人id';
COMMENT ON COLUMN "AITEST"."OPERATE_LOG"."USER_NAME" IS '操作人姓名';
COMMENT ON COLUMN "AITEST"."OPERATE_LOG"."COMP_ID" IS '操作人公司ID';
COMMENT ON COLUMN "AITEST"."OPERATE_LOG"."COMP_NAME" IS '操作人公司名称';
COMMENT ON COLUMN "AITEST"."OPERATE_LOG"."DEPT_ID" IS '操作人部门ID';
COMMENT ON COLUMN "AITEST"."OPERATE_LOG"."DEPT_NAME" IS '操作人部门名称';
COMMENT ON COLUMN "AITEST"."OPERATE_LOG"."OPERATE_TIME" IS '操作时长';
COMMENT ON COLUMN "AITEST"."OPERATE_LOG"."REMARK" IS '备注';
COMMENT ON COLUMN "AITEST"."OPERATE_LOG"."ABLE_ID" IS '创建时间';

-- ----------------------------
-- Table structure for ORDER_RECORD
-- ----------------------------
DROP TABLE "AITEST"."ORDER_RECORD";
CREATE TABLE "AITEST"."ORDER_RECORD" (
"ID" VARCHAR2(40 BYTE) NOT NULL ,
"ORDER_ID" VARCHAR2(40 BYTE) NULL ,
"ORDER_PROPERTY" NUMBER(2) NULL ,
"EXTERNAL_ORDER_NO" VARCHAR2(40 BYTE) NULL ,
"ORDER_SOURCE" NUMBER(2) NULL ,
"FROM_ACTION" NUMBER(2) NULL ,
"ORDER_NO" VARCHAR2(30 BYTE) NULL ,
"ORDER_SORT" NUMBER(2) NULL ,
"ORDER_TYPE" NUMBER(2) NULL ,
"ORDER_IN_TIME" DATE NULL ,
"CREATED_AT" DATE NULL ,
"CONFIRM_TIME" DATE NULL ,
"PROCESS_DURATION" NUMBER(8) NULL ,
"USER_ID" NUMBER(20) NULL ,
"LAST_OPERATE_STATUS" NUMBER(2) NULL ,
"UPDATED_AT" DATE NULL ,
"UPDATED_BY" VARCHAR2(20 BYTE) NULL ,
"CREATED_BY" VARCHAR2(20 BYTE) NULL ,
"COMP_ID" VARCHAR2(40 BYTE) NULL ,
"DEPT_ID" VARCHAR2(40 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "AITEST"."ORDER_RECORD"."ID" IS 'ID';
COMMENT ON COLUMN "AITEST"."ORDER_RECORD"."ORDER_ID" IS '订单id';
COMMENT ON COLUMN "AITEST"."ORDER_RECORD"."ORDER_PROPERTY" IS '订单属性：';
COMMENT ON COLUMN "AITEST"."ORDER_RECORD"."EXTERNAL_ORDER_NO" IS '外部订单号';
COMMENT ON COLUMN "AITEST"."ORDER_RECORD"."ORDER_SOURCE" IS '订单来源;一体化平台(1),差旅平台(2);';
COMMENT ON COLUMN "AITEST"."ORDER_RECORD"."FROM_ACTION" IS '来源动作： 1抢单 2自动派单 3手动派单';
COMMENT ON COLUMN "AITEST"."ORDER_RECORD"."ORDER_NO" IS '订单号';
COMMENT ON COLUMN "AITEST"."ORDER_RECORD"."ORDER_SORT" IS '订单类别';
COMMENT ON COLUMN "AITEST"."ORDER_RECORD"."ORDER_TYPE" IS '订单类型';
COMMENT ON COLUMN "AITEST"."ORDER_RECORD"."ORDER_IN_TIME" IS '进单时间';
COMMENT ON COLUMN "AITEST"."ORDER_RECORD"."CREATED_AT" IS '抢单/派单时间';
COMMENT ON COLUMN "AITEST"."ORDER_RECORD"."CONFIRM_TIME" IS '确认时间';
COMMENT ON COLUMN "AITEST"."ORDER_RECORD"."PROCESS_DURATION" IS '处理时长(秒)';
COMMENT ON COLUMN "AITEST"."ORDER_RECORD"."USER_ID" IS '用户ID';
COMMENT ON COLUMN "AITEST"."ORDER_RECORD"."LAST_OPERATE_STATUS" IS '最后操作状态';
COMMENT ON COLUMN "AITEST"."ORDER_RECORD"."UPDATED_AT" IS '最后操作时间';
COMMENT ON COLUMN "AITEST"."ORDER_RECORD"."UPDATED_BY" IS '抽回人';
COMMENT ON COLUMN "AITEST"."ORDER_RECORD"."CREATED_BY" IS '创建人';
COMMENT ON COLUMN "AITEST"."ORDER_RECORD"."COMP_ID" IS '公司ID';
COMMENT ON COLUMN "AITEST"."ORDER_RECORD"."DEPT_ID" IS '部门ID';

-- ----------------------------
-- Table structure for ORDERS
-- ----------------------------
DROP TABLE "AITEST"."ORDERS";
CREATE TABLE "AITEST"."ORDERS" (
"ID" VARCHAR2(40 BYTE) DEFAULT ''  NOT NULL ,
"ORDER_PROPERTY" VARCHAR2(20 CHAR) DEFAULT 0  NULL ,
"EXTERNAL_ORDER_NO" VARCHAR2(40 CHAR) DEFAULT NULL  NOT NULL ,
"ORDER_NO" VARCHAR2(40 CHAR) DEFAULT NULL  NOT NULL ,
"ORDER_TYPE" NUMBER(9) NULL ,
"ORDER_SORT" NUMBER(9) NULL ,
"ORDER_SOURCE" VARCHAR2(2 CHAR) NULL ,
"SEND_ORDER_REASON" VARCHAR2(20 CHAR) NULL ,
"GRAB_SINGLE_TIME" DATE NULL ,
"ORDER_ENTRANCE_TIME" DATE NULL ,
"GRAB_SINGLE_MEMBER" VARCHAR2(40 CHAR) NULL ,
"OUT_TICKET_MEMBER" VARCHAR2(40 BYTE) NULL ,
"OUT_TICKET_TIME" DATE NULL ,
"ORDER_PUMPBACK_NUM" NUMBER(2) NOT NULL ,
"ORDER_STATUS" NUMBER(9) NULL ,
"MANAGE_STATUS" NUMBER(9) DEFAULT NULL  NULL ,
"LOCK_SINGLE_TIME" DATE NULL ,
"SEND_ORDER_TIME" DATE NULL ,
"REMARK" VARCHAR2(100 BYTE) NULL ,
"REMARK2" VARCHAR2(100 BYTE) NULL ,
"REMARK3" VARCHAR2(100 BYTE) NULL ,
"USER_ID" NUMBER(18) DEFAULT 0  NULL ,
"COMP_ID" VARCHAR2(40 BYTE) DEFAULT 0  NULL ,
"DEPT_ID" VARCHAR2(40 BYTE) DEFAULT 0  NULL ,
"SEND_BACK_TIME" DATE NULL ,
"ROB_OUTIME" DATE NULL ,
"DEAL_OUTTIME" DATE NULL ,
"OPERATION_TIMES" NUMBER(10) DEFAULT 0  NULL ,
"DISPATCH_TIME" DATE NULL ,
"DISPATCH_COMFIRM_TIME" DATE NULL ,
"COMBACK_TIMES" NUMBER(10) NULL ,
"CREATED_AT" DATE NULL ,
"CREATED_BY" VARCHAR2(100 BYTE) NULL ,
"UPDATED_AT" DATE NULL ,
"UPDATED_BY" VARCHAR2(100 BYTE) NULL ,
"DEL_FLAG" NUMBER(10) NULL ,
"CREATE_DATE" DATE NULL ,
"LOCK_SINGLE_STATUS" NUMBER(1) DEFAULT 0  NULL ,
"DISPATCH_PERSON" NUMBER(20) NULL ,
"DISPATCH_COMP_ID" VARCHAR2(40 BYTE) NULL ,
"DISPATCH_DEPT_ID" VARCHAR2(40 BYTE) NULL ,
"CONFIRM_EXPIRATION" DATE NULL ,
"CUSTOMER_CITY" VARCHAR2(100 BYTE) NULL ,
"DEPARTURE_CITY" VARCHAR2(100 BYTE) NULL ,
"DESTINATION_CITY" VARCHAR2(100 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "AITEST"."ORDERS"."ID" IS '主键ID';
COMMENT ON COLUMN "AITEST"."ORDERS"."ORDER_PROPERTY" IS '订单属性';
COMMENT ON COLUMN "AITEST"."ORDERS"."EXTERNAL_ORDER_NO" IS '外部订单号';
COMMENT ON COLUMN "AITEST"."ORDERS"."ORDER_NO" IS '订单号';
COMMENT ON COLUMN "AITEST"."ORDERS"."ORDER_TYPE" IS '订单类型;出票(1),退票(2),改期(3),航延(4);';
COMMENT ON COLUMN "AITEST"."ORDERS"."ORDER_SORT" IS '订单类别;酒店(1),机票(2);';
COMMENT ON COLUMN "AITEST"."ORDERS"."ORDER_SOURCE" IS '订单来源;一体化平台(1),差旅平台(2);';
COMMENT ON COLUMN "AITEST"."ORDERS"."SEND_ORDER_REASON" IS '派单原由';
COMMENT ON COLUMN "AITEST"."ORDERS"."GRAB_SINGLE_TIME" IS '抢单时间';
COMMENT ON COLUMN "AITEST"."ORDERS"."ORDER_ENTRANCE_TIME" IS '进单时间';
COMMENT ON COLUMN "AITEST"."ORDERS"."GRAB_SINGLE_MEMBER" IS '抢单员/接单员';
COMMENT ON COLUMN "AITEST"."ORDERS"."OUT_TICKET_MEMBER" IS '出票员工号';
COMMENT ON COLUMN "AITEST"."ORDERS"."OUT_TICKET_TIME" IS '出票时间';
COMMENT ON COLUMN "AITEST"."ORDERS"."ORDER_PUMPBACK_NUM" IS '订单回抽次数';
COMMENT ON COLUMN "AITEST"."ORDERS"."ORDER_STATUS" IS '订单状态;待抢单(1),待派单(2),已抢单(3),已派单(4),兜底单(5);';
COMMENT ON COLUMN "AITEST"."ORDERS"."MANAGE_STATUS" IS '处理状态;已完成(1),处理中(2),待处理(3),已暂存(4),已超时(5),已抽回(6),已退回(7);';
COMMENT ON COLUMN "AITEST"."ORDERS"."LOCK_SINGLE_TIME" IS '锁单时间';
COMMENT ON COLUMN "AITEST"."ORDERS"."SEND_ORDER_TIME" IS '派单时间';
COMMENT ON COLUMN "AITEST"."ORDERS"."REMARK" IS '备注1';
COMMENT ON COLUMN "AITEST"."ORDERS"."REMARK2" IS '备注2';
COMMENT ON COLUMN "AITEST"."ORDERS"."REMARK3" IS '备注3';
COMMENT ON COLUMN "AITEST"."ORDERS"."USER_ID" IS '当前抢单/派单用户id';
COMMENT ON COLUMN "AITEST"."ORDERS"."COMP_ID" IS '公司id';
COMMENT ON COLUMN "AITEST"."ORDERS"."DEPT_ID" IS '部门id';
COMMENT ON COLUMN "AITEST"."ORDERS"."SEND_BACK_TIME" IS '订单退回时间';
COMMENT ON COLUMN "AITEST"."ORDERS"."ROB_OUTIME" IS '可抢单过期时间';
COMMENT ON COLUMN "AITEST"."ORDERS"."DEAL_OUTTIME" IS '处理过期时间';
COMMENT ON COLUMN "AITEST"."ORDERS"."OPERATION_TIMES" IS '操作次数';
COMMENT ON COLUMN "AITEST"."ORDERS"."DISPATCH_TIME" IS '派单时间';
COMMENT ON COLUMN "AITEST"."ORDERS"."DISPATCH_COMFIRM_TIME" IS '派单成功确认超时时间';
COMMENT ON COLUMN "AITEST"."ORDERS"."COMBACK_TIMES" IS '退回次数';
COMMENT ON COLUMN "AITEST"."ORDERS"."CREATED_AT" IS '创建时间';
COMMENT ON COLUMN "AITEST"."ORDERS"."CREATED_BY" IS '创建人';
COMMENT ON COLUMN "AITEST"."ORDERS"."UPDATED_AT" IS '更新时间';
COMMENT ON COLUMN "AITEST"."ORDERS"."UPDATED_BY" IS '更新人';
COMMENT ON COLUMN "AITEST"."ORDERS"."DEL_FLAG" IS '删除标志';
COMMENT ON COLUMN "AITEST"."ORDERS"."CREATE_DATE" IS '创建时间';
COMMENT ON COLUMN "AITEST"."ORDERS"."LOCK_SINGLE_STATUS" IS '锁单状态: 0 未锁单  1已锁单';
COMMENT ON COLUMN "AITEST"."ORDERS"."DISPATCH_PERSON" IS '派单人';
COMMENT ON COLUMN "AITEST"."ORDERS"."DISPATCH_COMP_ID" IS '派单人公司ID';
COMMENT ON COLUMN "AITEST"."ORDERS"."DISPATCH_DEPT_ID" IS '派单人部门ID';
COMMENT ON COLUMN "AITEST"."ORDERS"."CONFIRM_EXPIRATION" IS '确认超时时间';
COMMENT ON COLUMN "AITEST"."ORDERS"."CUSTOMER_CITY" IS '客户所在城市';
COMMENT ON COLUMN "AITEST"."ORDERS"."DEPARTURE_CITY" IS '始发地城市';
COMMENT ON COLUMN "AITEST"."ORDERS"."DESTINATION_CITY" IS '目的地城市';

-- ----------------------------
-- Table structure for REMARK
-- ----------------------------
DROP TABLE "AITEST"."REMARK";
CREATE TABLE "AITEST"."REMARK" (
"REMA_ID" NUMBER(18) NOT NULL ,
"USER_ID" NUMBER(9) DEFAULT 0  NOT NULL ,
"USER_NAME" VARCHAR2(50 CHAR) DEFAULT NULL  NULL ,
"ABLE_ID" VARCHAR2(80 CHAR) DEFAULT ''  NULL ,
"ABLE_TYPE" VARCHAR2(80 CHAR) DEFAULT ''  NULL ,
"REMARK_DATE" DATE DEFAULT ''  NULL ,
"REMARK_INFO" VARCHAR2(255 CHAR) DEFAULT ''  NULL ,
"DEPT_ID" VARCHAR2(100 BYTE) DEFAULT ''  NULL ,
"COMP_ID" VARCHAR2(100 BYTE) DEFAULT ''  NULL ,
"DEPT_NAME" VARCHAR2(80 BYTE) DEFAULT ''  NULL ,
"COMP_NAME" VARCHAR2(60 CHAR) DEFAULT ''  NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "AITEST"."REMARK" IS '备注表';
COMMENT ON COLUMN "AITEST"."REMARK"."REMA_ID" IS '主键ID';
COMMENT ON COLUMN "AITEST"."REMARK"."USER_ID" IS '操作人id';
COMMENT ON COLUMN "AITEST"."REMARK"."USER_NAME" IS '操作人姓名';
COMMENT ON COLUMN "AITEST"."REMARK"."ABLE_ID" IS '备注类型的id';
COMMENT ON COLUMN "AITEST"."REMARK"."ABLE_TYPE" IS '备注类型';
COMMENT ON COLUMN "AITEST"."REMARK"."REMARK_DATE" IS '备注时间';
COMMENT ON COLUMN "AITEST"."REMARK"."REMARK_INFO" IS '备注内容';
COMMENT ON COLUMN "AITEST"."REMARK"."DEPT_ID" IS '部门ID';
COMMENT ON COLUMN "AITEST"."REMARK"."COMP_ID" IS '公司ID';
COMMENT ON COLUMN "AITEST"."REMARK"."DEPT_NAME" IS '部门名称';
COMMENT ON COLUMN "AITEST"."REMARK"."COMP_NAME" IS '公司名称';

-- ----------------------------
-- Table structure for RULES
-- ----------------------------
DROP TABLE "AITEST"."RULES";
CREATE TABLE "AITEST"."RULES" (
"ID" NUMBER(20) NOT NULL ,
"TYPE" NUMBER(2) NOT NULL ,
"ORDER_TYPE" NUMBER(2) NOT NULL ,
"VALUE" NUMBER(8) NOT NULL ,
"UNIT" VARCHAR2(40 BYTE) NULL ,
"DESCRIPTION" VARCHAR2(255 BYTE) NULL ,
"STATUS" NUMBER(2) DEFAULT 1  NOT NULL ,
"PRIORITY" NUMBER(8) DEFAULT 0  NOT NULL ,
"CREATED_AT" DATE NOT NULL ,
"CREATED_BY" VARCHAR2(64 BYTE) NOT NULL ,
"UPDATED_AT" DATE NOT NULL ,
"UPDATED_BY" VARCHAR2(64 BYTE) NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "AITEST"."RULES"."TYPE" IS '规则类型1-抢单池停留时间 2-抢单成功确认超时时间 3-抢单处理超时时间 4-订单可抢次数 5-抢单可退回次数 6-抢单可抽回次数';
COMMENT ON COLUMN "AITEST"."RULES"."VALUE" IS '规则值';
COMMENT ON COLUMN "AITEST"."RULES"."UNIT" IS '单位 次数 分钟';
COMMENT ON COLUMN "AITEST"."RULES"."DESCRIPTION" IS '描述';
COMMENT ON COLUMN "AITEST"."RULES"."STATUS" IS '启用状态 0禁用 1启用';
COMMENT ON COLUMN "AITEST"."RULES"."PRIORITY" IS '优先权';

-- ----------------------------
-- Table structure for TB_CL
-- ----------------------------
DROP TABLE "AITEST"."TB_CL";
CREATE TABLE "AITEST"."TB_CL" (
"TKID" VARCHAR2(50 BYTE) NULL ,
"PMZT" VARCHAR2(20 BYTE) NULL ,
"CJRLX" VARCHAR2(20 BYTE) NULL ,
"GNGJ" VARCHAR2(20 BYTE) NULL ,
"PNR" VARCHAR2(10 BYTE) NULL ,
"SZM" VARCHAR2(10 BYTE) NULL ,
"TKNO" VARCHAR2(50 BYTE) NOT NULL ,
"CPSJ" VARCHAR2(50 BYTE) NULL ,
"CJR" VARCHAR2(50 BYTE) NOT NULL ,
"HC" VARCHAR2(20 BYTE) NULL ,
"HC_ZW" VARCHAR2(50 BYTE) NOT NULL ,
"HBH" VARCHAR2(20 BYTE) NULL ,
"HKGS" VARCHAR2(10 BYTE) NULL ,
"HKGSMC" VARCHAR2(50 BYTE) NULL ,
"CFSJ" VARCHAR2(50 BYTE) NOT NULL ,
"JSF" NUMBER NULL ,
"TAX" NUMBER NULL ,
"XJ" NUMBER NULL ,
"CJR_PHONE" VARCHAR2(255 BYTE) DEFAULT NULL  NOT NULL ,
"DPR" VARCHAR2(255 BYTE) NULL ,
"DPR_PHONE" VARCHAR2(255 BYTE) NULL ,
"CJR_IDCARD" VARCHAR2(255 BYTE) NOT NULL ,
"QSTS" VARCHAR2(255 BYTE) NULL ,
"HBSK" VARCHAR2(255 BYTE) NULL ,
"TYPE" VARCHAR2(255 BYTE) NULL ,
"TKNOS" VARCHAR2(255 BYTE) NOT NULL ,
"CW" VARCHAR2(255 BYTE) NULL ,
"XSZK" VARCHAR2(255 BYTE) NULL ,
"DDSJ" VARCHAR2(255 BYTE) NULL ,
"DBM" VARCHAR2(255 BYTE) NULL ,
"XSJ" VARCHAR2(255 BYTE) NULL ,
"DDBH" VARCHAR2(255 BYTE) NULL ,
"DPSJ" VARCHAR2(255 BYTE) NULL ,
"HYH" VARCHAR2(255 BYTE) NULL ,
"LXRKH" VARCHAR2(255 BYTE) NULL ,
"XM" VARCHAR2(255 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "AITEST"."TB_CL"."TKID" IS '订单编号';
COMMENT ON COLUMN "AITEST"."TB_CL"."PMZT" IS '票面_票证状态';
COMMENT ON COLUMN "AITEST"."TB_CL"."CJRLX" IS '票面_乘机人类型';
COMMENT ON COLUMN "AITEST"."TB_CL"."GNGJ" IS '票面_国内国际';
COMMENT ON COLUMN "AITEST"."TB_CL"."PNR" IS '票面_PNR';
COMMENT ON COLUMN "AITEST"."TB_CL"."SZM" IS '票面';
COMMENT ON COLUMN "AITEST"."TB_CL"."TKNO" IS '承运人-票号';
COMMENT ON COLUMN "AITEST"."TB_CL"."CPSJ" IS '出票时间';
COMMENT ON COLUMN "AITEST"."TB_CL"."CJR" IS '票面-乘机人';
COMMENT ON COLUMN "AITEST"."TB_CL"."HC" IS '票面-航程';
COMMENT ON COLUMN "AITEST"."TB_CL"."HC_ZW" IS '票面_航程名称';
COMMENT ON COLUMN "AITEST"."TB_CL"."HBH" IS '票面_航班号';
COMMENT ON COLUMN "AITEST"."TB_CL"."HKGS" IS '票面-航司';
COMMENT ON COLUMN "AITEST"."TB_CL"."HKGSMC" IS '航空公司名称';
COMMENT ON COLUMN "AITEST"."TB_CL"."CFSJ" IS '起飞时间';
COMMENT ON COLUMN "AITEST"."TB_CL"."JSF" IS '票面-机建';
COMMENT ON COLUMN "AITEST"."TB_CL"."TAX" IS '票面-税费';
COMMENT ON COLUMN "AITEST"."TB_CL"."XJ" IS '票面_票面小计';
COMMENT ON COLUMN "AITEST"."TB_CL"."CJR_PHONE" IS '乘机人电话';
COMMENT ON COLUMN "AITEST"."TB_CL"."DPR" IS '订票人';
COMMENT ON COLUMN "AITEST"."TB_CL"."DPR_PHONE" IS '订票人电话';
COMMENT ON COLUMN "AITEST"."TB_CL"."CJR_IDCARD" IS '乘机人证件号';
COMMENT ON COLUMN "AITEST"."TB_CL"."TKNOS" IS '（13位机票号）';
COMMENT ON COLUMN "AITEST"."TB_CL"."CW" IS '仓位';
COMMENT ON COLUMN "AITEST"."TB_CL"."XSZK" IS '折扣';
COMMENT ON COLUMN "AITEST"."TB_CL"."DDSJ" IS '达到时间';
COMMENT ON COLUMN "AITEST"."TB_CL"."DBM" IS '大编码';
COMMENT ON COLUMN "AITEST"."TB_CL"."DDBH" IS '订单编号';
COMMENT ON COLUMN "AITEST"."TB_CL"."DPSJ" IS '订单时间';
COMMENT ON COLUMN "AITEST"."TB_CL"."HYH" IS '会员号';
COMMENT ON COLUMN "AITEST"."TB_CL"."LXRKH" IS '联系人卡号';
COMMENT ON COLUMN "AITEST"."TB_CL"."XM" IS '客户姓名';

-- ----------------------------
-- Table structure for TB_CLKQ
-- ----------------------------
DROP TABLE "AITEST"."TB_CLKQ";
CREATE TABLE "AITEST"."TB_CLKQ" (
"PASSENGER_TICKET" VARCHAR2(255 BYTE) NOT NULL ,
"CLAIM_CODE" VARCHAR2(255 BYTE) NOT NULL ,
"CLAIM_CODE_STATUS" NUMBER(5) DEFAULT 0  NOT NULL ,
"SMS_SEND_STATUS" NUMBER(5) DEFAULT 0  NOT NULL ,
"SMS_SEND_TIME" DATE NULL ,
"VERIFICATION_CODE" VARCHAR2(255 BYTE) NULL ,
"VERIFICATION_CODE_EXPIRYTIME" NUMBER(30) NULL ,
"MEAL_TICKET" VARCHAR2(255 BYTE) NULL ,
"USER_PHONE" NUMBER(13) NULL ,
"RECEIVE_TIME" DATE NULL ,
"EXTRACT_TIME" DATE NULL ,
"CATEGORY" VARCHAR2(255 BYTE) NULL ,
"VALUE" NUMBER NULL ,
"EFFECTIVETIME" TIMESTAMP(6)  NULL ,
"EXPIRATIONTIME" TIMESTAMP(6)  NULL ,
"MEAL_TICKET_QRCODE" CLOB NULL ,
"IDCARD" VARCHAR2(50 BYTE) NOT NULL ,
"START_ADDRESS" VARCHAR2(10 BYTE) NOT NULL ,
"END_ADDRESS" VARCHAR2(10 BYTE) NOT NULL ,
"CJR_NAME" VARCHAR2(20 BYTE) NOT NULL ,
"CJR_PHONE" VARCHAR2(20 BYTE) NULL ,
"JBR_NAME" VARCHAR2(20 BYTE) NULL ,
"JBR_PHONE" VARCHAR2(200 BYTE) NULL ,
"START_DATE" VARCHAR2(20 BYTE) NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "AITEST"."TB_CLKQ"."PASSENGER_TICKET" IS '机票';
COMMENT ON COLUMN "AITEST"."TB_CLKQ"."CLAIM_CODE" IS '领取码（八位字母数字随机产生）';
COMMENT ON COLUMN "AITEST"."TB_CLKQ"."CLAIM_CODE_STATUS" IS '领取码领取状态 0 未领取  1 已领取  ';
COMMENT ON COLUMN "AITEST"."TB_CLKQ"."SMS_SEND_STATUS" IS '短信发送状态 0 未发送 1 已发送 2发送失败';
COMMENT ON COLUMN "AITEST"."TB_CLKQ"."SMS_SEND_TIME" IS '通知领取短信发送时间 短信发送时间';
COMMENT ON COLUMN "AITEST"."TB_CLKQ"."VERIFICATION_CODE" IS '短信验证码 ';
COMMENT ON COLUMN "AITEST"."TB_CLKQ"."VERIFICATION_CODE_EXPIRYTIME" IS '短信验证码过期时间';
COMMENT ON COLUMN "AITEST"."TB_CLKQ"."MEAL_TICKET" IS '餐券码';
COMMENT ON COLUMN "AITEST"."TB_CLKQ"."USER_PHONE" IS '用户手机（用户领取页面输入手机号）';
COMMENT ON COLUMN "AITEST"."TB_CLKQ"."RECEIVE_TIME" IS '领取时间';
COMMENT ON COLUMN "AITEST"."TB_CLKQ"."EXTRACT_TIME" IS '抽取时间';
COMMENT ON COLUMN "AITEST"."TB_CLKQ"."CATEGORY" IS '类别名称';
COMMENT ON COLUMN "AITEST"."TB_CLKQ"."VALUE" IS '卡券面值';
COMMENT ON COLUMN "AITEST"."TB_CLKQ"."EFFECTIVETIME" IS '生效时间戳';
COMMENT ON COLUMN "AITEST"."TB_CLKQ"."EXPIRATIONTIME" IS '失效时间戳';
COMMENT ON COLUMN "AITEST"."TB_CLKQ"."MEAL_TICKET_QRCODE" IS '二维码base64';
COMMENT ON COLUMN "AITEST"."TB_CLKQ"."IDCARD" IS '身份证';
COMMENT ON COLUMN "AITEST"."TB_CLKQ"."START_ADDRESS" IS '起飞地点';
COMMENT ON COLUMN "AITEST"."TB_CLKQ"."END_ADDRESS" IS '抵达地点';
COMMENT ON COLUMN "AITEST"."TB_CLKQ"."CJR_NAME" IS '乘机人姓名';
COMMENT ON COLUMN "AITEST"."TB_CLKQ"."CJR_PHONE" IS '乘机人电话';
COMMENT ON COLUMN "AITEST"."TB_CLKQ"."JBR_NAME" IS '经办人姓名';
COMMENT ON COLUMN "AITEST"."TB_CLKQ"."JBR_PHONE" IS '经办人电话';
COMMENT ON COLUMN "AITEST"."TB_CLKQ"."START_DATE" IS '起飞日期';

-- ----------------------------
-- Table structure for TB_YTH
-- ----------------------------
DROP TABLE "AITEST"."TB_YTH";
CREATE TABLE "AITEST"."TB_YTH" (
"RESID" VARCHAR2(120 BYTE) NULL ,
"INTERTYPE" VARCHAR2(50 BYTE) NULL ,
"WAYTYPE" VARCHAR2(50 BYTE) NULL ,
"ALERTSTATUS" VARCHAR2(20 BYTE) NULL ,
"BOOKINGREF" VARCHAR2(50 BYTE) NULL ,
"BIGPNR" VARCHAR2(50 BYTE) NULL ,
"TICKETTIME" TIMESTAMP(6)  NULL ,
"AIRDATE" VARCHAR2(50 BYTE) NULL ,
"AIRLINECODE" VARCHAR2(50 BYTE) NULL ,
"DEPARTURE" VARCHAR2(50 BYTE) NULL ,
"ARRIVAL" VARCHAR2(50 BYTE) NULL ,
"DEPARTURE_ARRIVAL" VARCHAR2(10 BYTE) NULL ,
"FLIGHTNO" NUMBER NULL ,
"DEPARTTIME" VARCHAR2(50 BYTE) NULL ,
"ARRIVETIME" VARCHAR2(50 BYTE) NULL ,
"CABIN" VARCHAR2(50 BYTE) NULL ,
"ISSHAREFLIGHT" VARCHAR2(50 BYTE) NULL ,
"CARDTYPE" VARCHAR2(50 BYTE) NULL ,
"CARDID" VARCHAR2(100 BYTE) NULL ,
"PASSENGERNAME" VARCHAR2(50 BYTE) NULL ,
"PASSENGERTYPE" VARCHAR2(50 BYTE) NULL ,
"TICKETSTATUS" VARCHAR2(50 BYTE) NULL ,
"TICKETID" VARCHAR2(100 BYTE) NULL ,
"AIRCODE_TICKETID" VARCHAR2(100 BYTE) NOT NULL ,
"OUTPRICE" NUMBER NULL ,
"TAXFEE" NUMBER NULL ,
"YQFEE" NUMBER NULL ,
"OUTTOTAL" NUMBER NULL ,
"CONTACT" VARCHAR2(50 BYTE) NULL ,
"CONTACTMOBILE" VARCHAR2(100 BYTE) NULL ,
"MOBILE" VARCHAR2(100 BYTE) NULL ,
"CUSTNO" VARCHAR2(50 BYTE) NULL ,
"CUSTFFP" VARCHAR2(50 BYTE) NULL ,
"GMCUSTNAME" VARCHAR2(200 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "AITEST"."TB_YTH"."RESID" IS '订单号';
COMMENT ON COLUMN "AITEST"."TB_YTH"."INTERTYPE" IS '国内国际: 0国内/1国际';
COMMENT ON COLUMN "AITEST"."TB_YTH"."WAYTYPE" IS '航线类型';
COMMENT ON COLUMN "AITEST"."TB_YTH"."ALERTSTATUS" IS '订单类型';
COMMENT ON COLUMN "AITEST"."TB_YTH"."BOOKINGREF" IS '订座编码';
COMMENT ON COLUMN "AITEST"."TB_YTH"."BIGPNR" IS '大编码';
COMMENT ON COLUMN "AITEST"."TB_YTH"."TICKETTIME" IS '出票日期';
COMMENT ON COLUMN "AITEST"."TB_YTH"."AIRDATE" IS '起飞日期';
COMMENT ON COLUMN "AITEST"."TB_YTH"."AIRLINECODE" IS '航司二字码';
COMMENT ON COLUMN "AITEST"."TB_YTH"."DEPARTURE" IS '出发';
COMMENT ON COLUMN "AITEST"."TB_YTH"."ARRIVAL" IS '抵达';
COMMENT ON COLUMN "AITEST"."TB_YTH"."DEPARTURE_ARRIVAL" IS '航程';
COMMENT ON COLUMN "AITEST"."TB_YTH"."FLIGHTNO" IS '航空公司航班号';
COMMENT ON COLUMN "AITEST"."TB_YTH"."DEPARTTIME" IS '起飞时间';
COMMENT ON COLUMN "AITEST"."TB_YTH"."ARRIVETIME" IS '抵达时间';
COMMENT ON COLUMN "AITEST"."TB_YTH"."CABIN" IS '舱位';
COMMENT ON COLUMN "AITEST"."TB_YTH"."ISSHAREFLIGHT" IS '是否共享航班:Y:是/N:否';
COMMENT ON COLUMN "AITEST"."TB_YTH"."CARDTYPE" IS '证件类型';
COMMENT ON COLUMN "AITEST"."TB_YTH"."CARDID" IS '证件号码';
COMMENT ON COLUMN "AITEST"."TB_YTH"."PASSENGERNAME" IS '旅客姓名';
COMMENT ON COLUMN "AITEST"."TB_YTH"."PASSENGERTYPE" IS '旅客类型';
COMMENT ON COLUMN "AITEST"."TB_YTH"."TICKETSTATUS" IS '客票状态';
COMMENT ON COLUMN "AITEST"."TB_YTH"."TICKETID" IS '票号';
COMMENT ON COLUMN "AITEST"."TB_YTH"."AIRCODE_TICKETID" IS '票号(十三位)';
COMMENT ON COLUMN "AITEST"."TB_YTH"."OUTPRICE" IS '票面价';
COMMENT ON COLUMN "AITEST"."TB_YTH"."TAXFEE" IS '机场税';
COMMENT ON COLUMN "AITEST"."TB_YTH"."YQFEE" IS '燃油税';
COMMENT ON COLUMN "AITEST"."TB_YTH"."OUTTOTAL" IS '票面小计';
COMMENT ON COLUMN "AITEST"."TB_YTH"."CONTACT" IS '联系人';
COMMENT ON COLUMN "AITEST"."TB_YTH"."CONTACTMOBILE" IS '联系人手机';
COMMENT ON COLUMN "AITEST"."TB_YTH"."MOBILE" IS '手机';
COMMENT ON COLUMN "AITEST"."TB_YTH"."CUSTNO" IS '工贸客户';
COMMENT ON COLUMN "AITEST"."TB_YTH"."CUSTFFP" IS '大客户号';
COMMENT ON COLUMN "AITEST"."TB_YTH"."GMCUSTNAME" IS '工贸客户名称';

-- ----------------------------
-- Table structure for USER
-- ----------------------------
DROP TABLE "AITEST"."USER";
CREATE TABLE "AITEST"."USER" (
"USER_ID" NUMBER(9) NOT NULL ,
"COMP_ID" VARCHAR2(100 BYTE) DEFAULT 0  NOT NULL ,
"DEPT_ID" VARCHAR2(100 BYTE) DEFAULT 0  NOT NULL ,
"COMP_NAME" VARCHAR2(64 CHAR) DEFAULT ''  NULL ,
"DEPT_NAME" VARCHAR2(64 CHAR) DEFAULT ''  NULL ,
"NAME" VARCHAR2(50 CHAR) DEFAULT ''  NOT NULL ,
"USERNAME" VARCHAR2(64 CHAR) DEFAULT ''  NOT NULL ,
"COMP_CITY" VARCHAR2(64 CHAR) DEFAULT ''  NULL ,
"DEL_FLAG" NUMBER(9) DEFAULT 0  NULL ,
"CREATED_AT" DATE DEFAULT ''  NULL ,
"CREATED_BY" VARCHAR2(64 BYTE) NULL ,
"UPDATED_AT" DATE NULL ,
"UPDATED_BY" VARCHAR2(64 BYTE) NULL ,
"ONLINE_STATUS" NUMBER(2) DEFAULT 3  NULL ,
"DEPT_CITY" VARCHAR2(64 BYTE) NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON TABLE "AITEST"."USER" IS '简单用户表';
COMMENT ON COLUMN "AITEST"."USER"."USER_ID" IS '主键ID';
COMMENT ON COLUMN "AITEST"."USER"."COMP_ID" IS '公司ID';
COMMENT ON COLUMN "AITEST"."USER"."DEPT_ID" IS '部门ID';
COMMENT ON COLUMN "AITEST"."USER"."COMP_NAME" IS '公司名称';
COMMENT ON COLUMN "AITEST"."USER"."DEPT_NAME" IS '部门名称';
COMMENT ON COLUMN "AITEST"."USER"."NAME" IS '姓名';
COMMENT ON COLUMN "AITEST"."USER"."USERNAME" IS '登陆账号';
COMMENT ON COLUMN "AITEST"."USER"."COMP_CITY" IS '用户公司所在城市';
COMMENT ON COLUMN "AITEST"."USER"."DEL_FLAG" IS '删除标识';
COMMENT ON COLUMN "AITEST"."USER"."CREATED_AT" IS '用户所在城市';
COMMENT ON COLUMN "AITEST"."USER"."ONLINE_STATUS" IS '在线状态：1-在线，2-忙碌，3-离线';
COMMENT ON COLUMN "AITEST"."USER"."DEPT_CITY" IS '部门所在城市';

-- ----------------------------
-- Table structure for USER_AUTHORITY
-- ----------------------------
DROP TABLE "AITEST"."USER_AUTHORITY";
CREATE TABLE "AITEST"."USER_AUTHORITY" (
"USER_ID" NUMBER(9) NOT NULL ,
"AUTHORITY_NAME" VARCHAR2(40 BYTE) NOT NULL ,
"CREATED_BY" VARCHAR2(40 BYTE) NOT NULL ,
"CREATED_AT" DATE NOT NULL ,
"UPDATED_BY" VARCHAR2(40 BYTE) NOT NULL ,
"UPDATED_AT" DATE NOT NULL 
)
LOGGING
NOCOMPRESS
NOCACHE

;
COMMENT ON COLUMN "AITEST"."USER_AUTHORITY"."USER_ID" IS '用户ID';
COMMENT ON COLUMN "AITEST"."USER_AUTHORITY"."AUTHORITY_NAME" IS '权限名称';

-- ----------------------------
-- Procedure structure for P_TEST_PAGING_QUERY
-- ----------------------------
CREATE OR REPLACE PROCEDURE "AITEST"."P_TEST_PAGING_QUERY"
  (
    p_pagesql      IN     VARCHAR2, --sql
    p_curPage      IN OUT NUMBER, --当前页
    p_pageSize     IN OUT NUMBER, --每页显示记录的条数
    p_totalRecords OUT    NUMBER, --总记录数
    p_totalPages   OUT    NUMBER, -- 总页数
    pageResultSet  OUT SYS_REFCURSOR              -- 输出结果集游标
  )
AS
  v_sql         VARCHAR2(2000) := ''; --sql语句
  v_startRecord NUMBER; --开始显示的记录数
  v_endRecord   NUMBER; --结束显示的记录条数

  BEGIN
    --记录总记录条数
    v_sql := 'select count(*) FROM (' || p_pagesql || ')';
    EXECUTE IMMEDIATE v_sql INTO p_totalRecords;

    IF MOD(p_totalRecords, p_pageSize) = 0
    THEN
      --得到整数则直接取得到的页码数否在原来的基础上增加一个页码
      p_totalPages := p_totalRecords / p_pageSize;
    ELSE
      p_totalPages := p_totalRecords / p_pageSize + 1;
    END IF;

    --验证页号
    IF p_curPage < 1
    THEN
      p_curPage := 1;
    END IF;

    --如果取的当前页大于总页数则取最大页数的数据
    IF p_curPage > p_totalPages
    THEN
      p_curPage := p_totalPages;
    END IF;
    --实现分页查询
    v_startRecord := (p_curPage - 1) * p_pageSize + 1;
    v_endRecord := p_curPage * p_pageSize;
    v_sql :=
    'select * from (SELECT t.*, ROWNUM RN from (' || p_pagesql || ') t where rownum<=' || v_endRecord || ' ) where RN>='
    || v_startRecord;
    p_totalPages := floor(p_totalPages); --去整数总页
    OPEN pageResultSet FOR v_sql;
    EXCEPTION
    WHEN OTHERS THEN
    CLOSE pageResultSet;

  END P_TEST_PAGING_QUERY;
/

-- ----------------------------
-- Procedure structure for SYNC_ORDER
-- ----------------------------
CREATE OR REPLACE PROCEDURE "AITEST"."SYNC_ORDER" IS 
	V_COUNT INT;  -- 总数量
	V_ERROR_MSG NVARCHAR2(2000); -- 报错信息
	V_TIMEOUT_MINUTES1 NUMBER  ; -- 超时时间1
	V_TIMEOUT_MINUTES2 NUMBER  ; -- 超时时间2
	V_TIMEOUT_MINUTES3 NUMBER  ; -- 超时时间3
	V_RULE_COUNT NUMBER;
  V_DDBH VARCHAR2( 100 );
	
	
BEGIN
		SELECT COUNT(*) INTO V_RULE_COUNT FROM RULES r WHERE r.VALUE is not null and  r.STATUS = 1 AND r.type = 1 and r.ORDER_TYPE = 1  ;
		
		if V_RULE_COUNT > 0   then
        SELECT
					VALUE INTO V_TIMEOUT_MINUTES1 
				FROM
					( SELECT * FROM RULES r WHERE   r.VALUE is not null and  r.STATUS = 1 AND r.type = 1 and r.ORDER_TYPE = 1  ORDER BY created_at DESC ) 
				WHERE
					ROWNUM <= 1;
    end if;
		
		DBMS_OUTPUT.PUT_LINE( 'V_TIMEOUT_MINUTES1:' || V_TIMEOUT_MINUTES1 );


		
		if V_RULE_COUNT <= 0    then
       V_TIMEOUT_MINUTES1 := 10; 
    end if;
		
		
	
		SELECT COUNT(*) INTO V_RULE_COUNT FROM RULES r WHERE r.VALUE is not null and  r.STATUS = 1 AND r.type = 1 and r.ORDER_TYPE = 2  ;
		if V_RULE_COUNT > 0   then
        SELECT
					VALUE INTO V_TIMEOUT_MINUTES2 
				FROM
					( SELECT * FROM RULES r WHERE   r.VALUE is not null and  r.STATUS = 1 AND r.type = 1 and r.ORDER_TYPE = 2  ORDER BY created_at DESC ) 
				WHERE
					ROWNUM <= 1;
    end if;
		
				
	
		SELECT COUNT(*) INTO V_RULE_COUNT FROM RULES r WHERE r.VALUE is not null and  r.STATUS = 1 AND r.type = 1 and r.ORDER_TYPE = 3  ;
		if V_RULE_COUNT > 0   then
        SELECT
					VALUE INTO V_TIMEOUT_MINUTES3
				FROM
					( SELECT * FROM RULES r WHERE   r.VALUE is not null and  r.STATUS = 1 AND r.type = 1 and r.ORDER_TYPE = 3  ORDER BY created_at DESC ) 
				WHERE
					ROWNUM <= 1;
    end if;
		
		
		if V_RULE_COUNT <= 0    then
       V_TIMEOUT_MINUTES3 := 10; 
    end if;	


	DBMS_OUTPUT.PUT_LINE( '超时时间1:' || V_TIMEOUT_MINUTES1 );
	DBMS_OUTPUT.PUT_LINE( '超时时间2:' || V_TIMEOUT_MINUTES2 );
	DBMS_OUTPUT.PUT_LINE( '超时时间3:' || V_TIMEOUT_MINUTES3);

	select COUNT(*) INTO V_COUNT from ( select * from (select DDBH,DDLX,DDLY,DDZT, Row_Number() OVER (partition by DDBH ORDER BY ORDER_TYPE desc) as RD
from ( 
			select t1.DDBH,t1.DDLX,t1.DDLY,t1.DDZT, 1 as ORDER_TYPE from kh_khdd@cpspp t1 JOIN kh_khdd_extend@cpspp ex ON t1.ddbh = ex.ddbh  
	where  1 = 1
	AND t1.pnr_hcglgj = '1'
	AND t1.ds_compid in ( 'SHGM', 'PT', 'SHGM2' , 'CAN' , 'SCB' , 'WCPDW', '8268' )
	AND t1.ddlx NOT IN ( '4', '6', '7', 'A' ) 	
	AND ( t1.ddzt = '2' 
	OR (
		ex.ptzcbs = '10100000' 
		AND ex.gy_ptzt = '400' 
		AND t1.ddlx IN ( 'K', 'B', 'C' ) 
		AND t1.ddzt = 'A' 
	) 
	) 
union 
	select t1.DDBH,t1.DDLX,t1.DDLY,t1.DDZT, 2 as ORDER_TYPE from kh_khdd@cpspp t1 ,  T_GQSQB@cpspp t2 where 	t1.DDBH = t2.DDBH 
	AND t2.ds_compid in ( 'SHGM', 'PT', 'SHGM2' , 'CAN' , 'SCB' , 'WCPDW', '8268' )
	AND  t2.gqzt = '2'   
	AND t2.GNGJ = '1'
union 
	select t1.DDBH,t1.DDLX,t1.DDLY,t1.DDZT, 3 as ORDER_TYPE from kh_khdd@cpspp t1, TICKET_RETURN@cpspp  t2 where 	t1.DDBH = t2.DDBH
	AND t2.cgwc_compid in ( 'SHGM', 'PT', 'SHGM2' , 'CAN' , 'SCB' , 'WCPDW', '8268' )
	AND ( t2.tp_tpzt = '3' OR t2.tp_tpzt = '4' OR t2.tp_tpzt = '5' OR t2.tp_tpzt = '6' ) 
	AND ( t2.cg_wcf = '0' OR t2.cg_wcf = '3' OR t2.cg_wcf = '8' ) 
	AND t2.JP_HCGLGJ = '1'
	
--union 
--select t1.DDBH,t1.DDLX,t1.DDLY,t1.DDZT, 3 as ORDER_TYPE from kh_khdd@cpspp t1, b_qinfo@cpspp  t2 where 	t1.DDBH = t2.DDBH and  t2.PNR_HCGLGJ = '1'


)) where RD = 1 ) ;


  IF V_COUNT > 0 THEN
		DBMS_OUTPUT.PUT_LINE( '异常单数量:' || V_COUNT );
    BEGIN
      MERGE INTO ORDERS A
      USING ( select * from (select bh, PNR_CFCS,PNR_DDCS,DDBH,DDLX,DDLY,DDZT,ORDER_TYPE, Row_Number() OVER (partition by DDBH ORDER BY ORDER_TYPE desc) as RD
from ( 
			select t1.ddbh  as bh , get_city( t1.PNR_CFCS ) PNR_CFCS, get_city( t1.PNR_DDCS) PNR_DDCS,t1.DDBH,t1.DDLX,t1.DDLY,t1.DDZT, 1 as ORDER_TYPE from kh_khdd@cpspp t1 JOIN kh_khdd_extend@cpspp ex ON t1.ddbh = ex.ddbh  
	where  1 = 1
	AND t1.pnr_hcglgj = '1'
	AND t1.ds_compid in ( 'SHGM', 'PT', 'SHGM2' , 'CAN' , 'SCB' , 'WCPDW', '8268' )
	AND t1.ddlx NOT IN ( '4', '6', '7', 'A' ) 	
	AND ( t1.ddzt = '2' 
		OR (
			ex.ptzcbs = '10100000' 
			AND ex.gy_ptzt = '400' 
			AND t1.ddlx IN ( 'K', 'B', 'C' ) 
			AND t1.ddzt = 'A' 
		) 
	) 
union 
	select t2.GQDH  as bh , get_city( t1.PNR_CFCS ) PNR_CFCS, get_city( t1.PNR_DDCS) PNR_DDCS,t1.DDBH,t1.DDLX,t1.DDLY,t1.DDZT, 2 as ORDER_TYPE from kh_khdd@cpspp t1 ,  T_GQSQB@cpspp t2 where 	t1.DDBH = t2.DDBH 
	AND t2.ds_compid in ( 'SHGM', 'PT', 'SHGM2' , 'CAN' , 'SCB' , 'WCPDW', '8268' )
	AND  t2.gqzt = '2'  
	AND  t2.GNGJ = '1'

	
union 
	select t2.ID  as bh , get_city( t1.PNR_CFCS ) PNR_CFCS, get_city( t1.PNR_DDCS) PNR_DDCS,t1.DDBH,t1.DDLX,t1.DDLY,t1.DDZT, 3 as ORDER_TYPE from kh_khdd@cpspp t1, TICKET_RETURN@cpspp  t2 where 	t1.DDBH = t2.DDBH
	AND t2.cgwc_compid in ( 'SHGM', 'PT', 'SHGM2' , 'CAN' , 'SCB' , 'WCPDW', '8268' )
	AND ( t2.tp_tpzt = '3' OR t2.tp_tpzt = '4' OR t2.tp_tpzt = '5' OR t2.tp_tpzt = '6' ) 
	AND ( t2.cg_wcf = '0' OR t2.cg_wcf = '3' OR t2.cg_wcf = '8' ) 
	AND t2.JP_HCGLGJ = '1'
	
	
		--union  -- 航延
		--select t1.DDBH,t1.DDLX,t1.DDLY,t1.DDZT, 3 as ORDER_TYPE from kh_khdd@cpspp t1, b_qinfo@cpspp  t2 			where 		t1.DDBH = t2.DDBH and t2.PNR_HCGLGJ = '1'


)) where RD = 1 ) B
      ON (A.ORDER_NO = B.DDBH )
      WHEN MATCHED THEN
        UPDATE
           SET 
							-- A.ORDER_TYPE = 1,
               A.ORDER_SOURCE = B.DDLY
               --,A.ORDER_STATUS = B.DDZT
      WHEN NOT MATCHED THEN
				INSERT ( 	
				ID 
				,DEPARTURE_CITY,DESTINATION_CITY
				,EXTERNAL_ORDER_NO 
				,ORDER_NO 
				,ORDER_PUMPBACK_NUM
				,ORDER_ENTRANCE_TIME
				,CREATE_DATE
				,ORDER_TYPE
				,ORDER_SOURCE
				,ORDER_SORT
				,ORDER_STATUS
				,ROB_OUTIME -- 可抢单处理过期时间
				) VALUES  ( GET_UUID()
				,B.PNR_CFCS,B.PNR_DDCS
				, B.BH,B.DDBH, 0
				,SYSDATE
				,SYSDATE
				,B.ORDER_TYPE  --出票(1)
				,B.DDLY
				,1  --机票
				,1
				,(CASE B.ORDER_TYPE
				WHEN 1 THEN SYSDATE + V_TIMEOUT_MINUTES1/24/60
				WHEN 2 THEN SYSDATE + V_TIMEOUT_MINUTES3/24/60
				ELSE SYSDATE + V_TIMEOUT_MINUTES2/24/60 END)
				);

	   END;
	  END IF;
 COMMIT; --提交

 -- INSERT INTO ERROR_LOG VALUES (ID, '数据同步', '', SYSDATE); --添加信息到日志表
EXCEPTION
  --出现异常
WHEN NO_DATA_FOUND THEN	
 DBMS_OUTPUT.PUT_LINE('NO_DATA_FOUND:' || SQLERRM); --打印错误信息
  V_TIMEOUT_MINUTES1:= 10;
	V_TIMEOUT_MINUTES2:= 10;
	V_TIMEOUT_MINUTES3:= 10;
WHEN OTHERS THEN	

    BEGIN
   
      ROLLBACK; --回滚   
    END;
END;
/

-- ----------------------------
-- Function structure for GET_CITY
-- ----------------------------
CREATE OR REPLACE FUNCTION "AITEST"."GET_CITY"( p_szm IN VARCHAR2 ) 
RETURN VARCHAR2 IS 
	r_city varchar2(50);
BEGIN
	SELECT
		t.csbh INTO r_city 
	FROM
		b_city@cpspp t 
	WHERE
		t.nbbh = p_szm 
		AND ROWNUM <= 1 
	ORDER BY
		t.CZDATETIME DESC;
	return r_city;
	EXCEPTION 
		WHEN OTHERS THEN
	RETURN NULL;
END;
/

-- ----------------------------
-- Function structure for GET_UUID
-- ----------------------------
CREATE OR REPLACE FUNCTION "AITEST"."GET_UUID" RETURN VARCHAR IS guid VARCHAR ( 50 );
BEGIN
		guid := lower(
			RAWTOHEX(
			sys_guid ()));
	RETURN substr( guid, 1, 8 ) || '-' || substr( guid, 9, 4 ) || '-' || substr( guid, 13, 4 ) || '-' || substr( guid, 17, 4 ) || '-' || substr( guid, 21, 12 );

END get_uuid;
/

-- ----------------------------
-- Sequence structure for BOOK_SEQ
-- ----------------------------
DROP SEQUENCE "AITEST"."BOOK_SEQ";
CREATE SEQUENCE "AITEST"."BOOK_SEQ"
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 CACHE 20;

-- ----------------------------
-- Sequence structure for CUSTOMERS_SEQ
-- ----------------------------
DROP SEQUENCE "AITEST"."CUSTOMERS_SEQ";
CREATE SEQUENCE "AITEST"."CUSTOMERS_SEQ"
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1052
 NOCACHE ;

-- ----------------------------
-- Sequence structure for MESSAGE_SEQ
-- ----------------------------
DROP SEQUENCE "AITEST"."MESSAGE_SEQ";
CREATE SEQUENCE "AITEST"."MESSAGE_SEQ"
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1212
 NOCACHE ;

-- ----------------------------
-- Sequence structure for OPERATION_LOG_ID_SEQUENCE
-- ----------------------------
DROP SEQUENCE "AITEST"."OPERATION_LOG_ID_SEQUENCE";
CREATE SEQUENCE "AITEST"."OPERATION_LOG_ID_SEQUENCE"
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1294
 NOCACHE ;

-- ----------------------------
-- Sequence structure for rules_id_sequence
-- ----------------------------
DROP SEQUENCE "AITEST"."rules_id_sequence";
CREATE SEQUENCE "AITEST"."rules_id_sequence"
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1
 CACHE 20;

-- ----------------------------
-- Sequence structure for RULES_ID_SEQUENCE
-- ----------------------------
DROP SEQUENCE "AITEST"."RULES_ID_SEQUENCE";
CREATE SEQUENCE "AITEST"."RULES_ID_SEQUENCE"
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1100
 NOCACHE ;

-- ----------------------------
-- Sequence structure for S_S_DEPART
-- ----------------------------
DROP SEQUENCE "AITEST"."S_S_DEPART";
CREATE SEQUENCE "AITEST"."S_S_DEPART"
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 21
 CACHE 20;

-- ----------------------------
-- Sequence structure for SYS_LOG_ID_SEQUENCE
-- ----------------------------
DROP SEQUENCE "AITEST"."SYS_LOG_ID_SEQUENCE";
CREATE SEQUENCE "AITEST"."SYS_LOG_ID_SEQUENCE"
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 1005
 NOCACHE ;

-- ----------------------------
-- Sequence structure for TABLE1_ID_SEQUENCE
-- ----------------------------
DROP SEQUENCE "AITEST"."TABLE1_ID_SEQUENCE";
CREATE SEQUENCE "AITEST"."TABLE1_ID_SEQUENCE"
 INCREMENT BY 1
 MINVALUE 1
 MAXVALUE 9999999999999999999999999999
 START WITH 3
 NOCACHE ;

-- ----------------------------
-- Indexes structure for table COMP
-- ----------------------------

-- ----------------------------
-- Checks structure for table COMP
-- ----------------------------
ALTER TABLE "AITEST"."COMP" ADD CHECK ("COMP_ID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table COMP
-- ----------------------------
ALTER TABLE "AITEST"."COMP" ADD PRIMARY KEY ("COMP_ID");

-- ----------------------------
-- Indexes structure for table DEPT
-- ----------------------------

-- ----------------------------
-- Checks structure for table DEPT
-- ----------------------------
ALTER TABLE "AITEST"."DEPT" ADD CHECK ("DEPT_ID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table DEPT
-- ----------------------------
ALTER TABLE "AITEST"."DEPT" ADD PRIMARY KEY ("DEPT_ID");

-- ----------------------------
-- Indexes structure for table MESSAGE
-- ----------------------------

-- ----------------------------
-- Checks structure for table MESSAGE
-- ----------------------------
ALTER TABLE "AITEST"."MESSAGE" ADD CHECK ("ID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table MESSAGE
-- ----------------------------
ALTER TABLE "AITEST"."MESSAGE" ADD PRIMARY KEY ("ID");

-- ----------------------------
-- Indexes structure for table OPERATE_LOG
-- ----------------------------

-- ----------------------------
-- Checks structure for table OPERATE_LOG
-- ----------------------------
ALTER TABLE "AITEST"."OPERATE_LOG" ADD CHECK ("ID" IS NOT NULL);
ALTER TABLE "AITEST"."OPERATE_LOG" ADD CHECK ("USER_ID" IS NOT NULL);
ALTER TABLE "AITEST"."OPERATE_LOG" ADD CHECK ("OPERATE_TYPE" IS NOT NULL);
ALTER TABLE "AITEST"."OPERATE_LOG" ADD CHECK ("USER_NAME" IS NOT NULL);
ALTER TABLE "AITEST"."OPERATE_LOG" ADD CHECK ("ABLE_ID" IS NOT NULL);
ALTER TABLE "AITEST"."OPERATE_LOG" ADD CHECK ("ABLE_TYPE" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table OPERATE_LOG
-- ----------------------------
ALTER TABLE "AITEST"."OPERATE_LOG" ADD PRIMARY KEY ("ID");

-- ----------------------------
-- Indexes structure for table ORDER_RECORD
-- ----------------------------

-- ----------------------------
-- Checks structure for table ORDER_RECORD
-- ----------------------------
ALTER TABLE "AITEST"."ORDER_RECORD" ADD CHECK ("ID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table ORDER_RECORD
-- ----------------------------
ALTER TABLE "AITEST"."ORDER_RECORD" ADD PRIMARY KEY ("ID");

-- ----------------------------
-- Indexes structure for table ORDERS
-- ----------------------------

-- ----------------------------
-- Checks structure for table ORDERS
-- ----------------------------
ALTER TABLE "AITEST"."ORDERS" ADD CHECK ("ID" IS NOT NULL);
ALTER TABLE "AITEST"."ORDERS" ADD CHECK ("EXTERNAL_ORDER_NO" IS NOT NULL);
ALTER TABLE "AITEST"."ORDERS" ADD CHECK ("ORDER_NO" IS NOT NULL);
ALTER TABLE "AITEST"."ORDERS" ADD CHECK ("ORDER_PUMPBACK_NUM" IS NOT NULL);
ALTER TABLE "AITEST"."ORDERS" ADD CHECK ("ID" IS NOT NULL);
ALTER TABLE "AITEST"."ORDERS" ADD CHECK ("EXTERNAL_ORDER_NO" IS NOT NULL);
ALTER TABLE "AITEST"."ORDERS" ADD CHECK ("ORDER_NO" IS NOT NULL);
ALTER TABLE "AITEST"."ORDERS" ADD CHECK ("ORDER_PUMPBACK_NUM" IS NOT NULL);
ALTER TABLE "AITEST"."ORDERS" ADD CHECK ("ID" IS NOT NULL);
ALTER TABLE "AITEST"."ORDERS" ADD CHECK ("EXTERNAL_ORDER_NO" IS NOT NULL);
ALTER TABLE "AITEST"."ORDERS" ADD CHECK ("ORDER_NO" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table ORDERS
-- ----------------------------
ALTER TABLE "AITEST"."ORDERS" ADD PRIMARY KEY ("ID", "ORDER_PUMPBACK_NUM");

-- ----------------------------
-- Indexes structure for table REMARK
-- ----------------------------

-- ----------------------------
-- Checks structure for table REMARK
-- ----------------------------
ALTER TABLE "AITEST"."REMARK" ADD CHECK ("REMA_ID" IS NOT NULL);
ALTER TABLE "AITEST"."REMARK" ADD CHECK ("USER_ID" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table REMARK
-- ----------------------------
ALTER TABLE "AITEST"."REMARK" ADD PRIMARY KEY ("REMA_ID");

-- ----------------------------
-- Indexes structure for table RULES
-- ----------------------------

-- ----------------------------
-- Checks structure for table RULES
-- ----------------------------
ALTER TABLE "AITEST"."RULES" ADD CHECK ("ID" IS NOT NULL);
ALTER TABLE "AITEST"."RULES" ADD CHECK ("TYPE" IS NOT NULL);
ALTER TABLE "AITEST"."RULES" ADD CHECK ("ORDER_TYPE" IS NOT NULL);
ALTER TABLE "AITEST"."RULES" ADD CHECK ("VALUE" IS NOT NULL);
ALTER TABLE "AITEST"."RULES" ADD CHECK ("STATUS" IS NOT NULL);
ALTER TABLE "AITEST"."RULES" ADD CHECK ("PRIORITY" IS NOT NULL);
ALTER TABLE "AITEST"."RULES" ADD CHECK ("CREATED_AT" IS NOT NULL);
ALTER TABLE "AITEST"."RULES" ADD CHECK ("CREATED_BY" IS NOT NULL);
ALTER TABLE "AITEST"."RULES" ADD CHECK ("UPDATED_AT" IS NOT NULL);
ALTER TABLE "AITEST"."RULES" ADD CHECK ("UPDATED_BY" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table RULES
-- ----------------------------
ALTER TABLE "AITEST"."RULES" ADD PRIMARY KEY ("ID");

-- ----------------------------
-- Indexes structure for table TB_CL
-- ----------------------------

-- ----------------------------
-- Checks structure for table TB_CL
-- ----------------------------
ALTER TABLE "AITEST"."TB_CL" ADD CHECK ("TKNO" IS NOT NULL);
ALTER TABLE "AITEST"."TB_CL" ADD CHECK ("CJR" IS NOT NULL);
ALTER TABLE "AITEST"."TB_CL" ADD CHECK ("HC_ZW" IS NOT NULL);
ALTER TABLE "AITEST"."TB_CL" ADD CHECK ("CFSJ" IS NOT NULL);
ALTER TABLE "AITEST"."TB_CL" ADD CHECK ("CJR_PHONE" IS NOT NULL);
ALTER TABLE "AITEST"."TB_CL" ADD CHECK ("CJR_IDCARD" IS NOT NULL);
ALTER TABLE "AITEST"."TB_CL" ADD CHECK ("TKNOS" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TB_CL
-- ----------------------------
ALTER TABLE "AITEST"."TB_CL" ADD PRIMARY KEY ("TKNOS");

-- ----------------------------
-- Indexes structure for table TB_CLKQ
-- ----------------------------

-- ----------------------------
-- Checks structure for table TB_CLKQ
-- ----------------------------
ALTER TABLE "AITEST"."TB_CLKQ" ADD CHECK ("PASSENGER_TICKET" IS NOT NULL);
ALTER TABLE "AITEST"."TB_CLKQ" ADD CHECK ("CLAIM_CODE" IS NOT NULL);
ALTER TABLE "AITEST"."TB_CLKQ" ADD CHECK ("CLAIM_CODE_STATUS" IS NOT NULL);
ALTER TABLE "AITEST"."TB_CLKQ" ADD CHECK ("SMS_SEND_STATUS" IS NOT NULL);
ALTER TABLE "AITEST"."TB_CLKQ" ADD CHECK ("IDCARD" IS NOT NULL);
ALTER TABLE "AITEST"."TB_CLKQ" ADD CHECK ("START_ADDRESS" IS NOT NULL);
ALTER TABLE "AITEST"."TB_CLKQ" ADD CHECK ("END_ADDRESS" IS NOT NULL);
ALTER TABLE "AITEST"."TB_CLKQ" ADD CHECK ("CJR_NAME" IS NOT NULL);
ALTER TABLE "AITEST"."TB_CLKQ" ADD CHECK ("START_DATE" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table TB_CLKQ
-- ----------------------------
ALTER TABLE "AITEST"."TB_CLKQ" ADD PRIMARY KEY ("PASSENGER_TICKET", "CLAIM_CODE");

-- ----------------------------
-- Indexes structure for table TB_YTH
-- ----------------------------

-- ----------------------------
-- Primary Key structure for table TB_YTH
-- ----------------------------
ALTER TABLE "AITEST"."TB_YTH" ADD PRIMARY KEY ("AIRCODE_TICKETID");

-- ----------------------------
-- Indexes structure for table USER
-- ----------------------------

-- ----------------------------
-- Checks structure for table USER
-- ----------------------------
ALTER TABLE "AITEST"."USER" ADD CHECK ("USER_ID" IS NOT NULL);
ALTER TABLE "AITEST"."USER" ADD CHECK ("COMP_ID" IS NOT NULL);
ALTER TABLE "AITEST"."USER" ADD CHECK ("DEPT_ID" IS NOT NULL);
ALTER TABLE "AITEST"."USER" ADD CHECK ("USERNAME" IS NOT NULL);
ALTER TABLE "AITEST"."USER" ADD CHECK ("NAME" IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table USER
-- ----------------------------
ALTER TABLE "AITEST"."USER" ADD PRIMARY KEY ("USER_ID");

-- ----------------------------
-- Indexes structure for table USER_AUTHORITY
-- ----------------------------
CREATE UNIQUE INDEX "AITEST"."unique"
ON "AITEST"."USER_AUTHORITY" ("USER_ID" ASC, "AUTHORITY_NAME" ASC)
LOGGING
VISIBLE;

-- ----------------------------
-- Checks structure for table USER_AUTHORITY
-- ----------------------------
ALTER TABLE "AITEST"."USER_AUTHORITY" ADD CHECK ("USER_ID" IS NOT NULL);
ALTER TABLE "AITEST"."USER_AUTHORITY" ADD CHECK ("AUTHORITY_NAME" IS NOT NULL);
ALTER TABLE "AITEST"."USER_AUTHORITY" ADD CHECK ("CREATED_BY" IS NOT NULL);
ALTER TABLE "AITEST"."USER_AUTHORITY" ADD CHECK ("CREATED_AT" IS NOT NULL);
ALTER TABLE "AITEST"."USER_AUTHORITY" ADD CHECK ("UPDATED_BY" IS NOT NULL);
ALTER TABLE "AITEST"."USER_AUTHORITY" ADD CHECK ("UPDATED_AT" IS NOT NULL);
